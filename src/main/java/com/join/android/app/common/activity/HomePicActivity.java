package com.join.android.app.common.activity;import android.app.Activity;import android.content.Intent;import android.database.Cursor;import android.os.Bundle;import android.provider.MediaStore;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.GridView;import android.widget.TextView;import com.join.android.app.common.R;import com.join.android.app.common.adapter.HomePicAdapter;import com.join.android.app.common.manager.DialogManager;import java.util.ArrayList;public class HomePicActivity extends Activity implements AdapterView.OnItemClickListener, View.OnClickListener {    public static final String SELECT_PHOTO_PIC_LIST_PATH = "list_path";    public static final String SELECT_PHOTO_PIC_PATH = "pic_path";    public static final String PHOTO_PIC_COUNT = "pic_count";    public static final String SELECT_TYPE = "select_type";    public static final int PHOTO_MAX_COUNT = 9;    public static final int RESULT_CODE_OK = 302;    private TextView title;    private GridView imageGridView;    private TextView count;    private Button submit;    private HomePicAdapter albumAdapter;    private ArrayList<String> path;    private ArrayList<String> mSelect;//选中的图片    private String name = "Camera";    private int picCount;    private boolean single;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.album_activity);        initView();        single = getIntent().getBooleanExtra(SELECT_TYPE, false);        picCount = getIntent().getIntExtra(PHOTO_PIC_COUNT, PHOTO_MAX_COUNT);        if (!single) {            count.setVisibility(View.VISIBLE);            submit.setVisibility(View.VISIBLE);            mSelect = new ArrayList<String>();            count.setText(String.format(getString(R.string.photo_img_select_count), String.valueOf(mSelect.size())));            submit.setOnClickListener(this);        }        albumAdapter = new HomePicAdapter(this, path);        imageGridView.setAdapter(albumAdapter);        imageGridView.setOnItemClickListener(this);        first();    }    private void initView() {        title = (TextView) findViewById(R.id.tv_title);        imageGridView = (GridView) findViewById(R.id.images_display);        count = (TextView) findViewById(R.id.album_count);        submit = (Button) findViewById(R.id.album_determine);    }    public void exit(View view) {        intentPhoto();    }    @Override    public void onBackPressed() {        intentPhoto();        super.onBackPressed();    }    private void intentPhoto() {        Intent intent = new Intent(this, HomePhotoActivity.class);        startActivityForResult(intent, 0);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (resultCode == HomePhotoActivity.RESULT_CODE_OK) {            path = data.getStringArrayListExtra(HomePhotoActivity.PHOTO_PIC_LIST_PATH);            name = data.getStringExtra(HomePhotoActivity.PHOTO_NAME);            refresh();        } else {            setResult(RESULT_CANCELED);            finish();        }    }    @Override    public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {        if (single) {            Intent intent = new Intent();            intent.putExtra(SELECT_PHOTO_PIC_PATH, path.get(position));            setResult(RESULT_CODE_OK, intent);            finish();        } else {            String str = String.valueOf(position);            if (albumAdapter.isSelect(str)) {                albumAdapter.removeSelect(str);                mSelect.remove(path.get(position));            } else {                if (mSelect.size() < picCount || picCount == 0) {                    albumAdapter.addSelect(str);                    mSelect.add(path.get(position));                } else {                    DialogManager.getInstance().makeText(HomePicActivity.this, String.format(getString(R.string.photo_img_select_max), String.valueOf(picCount)), DialogManager.DIALOG_TYPE_ERROR);                }            }            count.setText(String.format(getString(R.string.photo_img_select_count), String.valueOf(mSelect.size())));            albumAdapter.notifyDataSetChanged();        }    }    @Override    public void onClick(View view) {        Intent intent = new Intent();        intent.putExtra(SELECT_PHOTO_PIC_LIST_PATH, mSelect);        setResult(RESULT_CODE_OK, intent);        finish();    }    //初次默认加载本地camera库图片    private void first() {        Cursor cursor = null;        try {            path = new ArrayList<String>();            cursor = getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, null, MediaStore.Images.Media.BUCKET_DISPLAY_NAME + "=?", new String[]{name}, null);            while (cursor != null && cursor.moveToNext()) {                path.add(cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA)));            }            refresh();        } catch (Exception err) {            err.printStackTrace();            ;            DialogManager.getInstance().makeText(this, getString(R.string.no_sdcard), DialogManager.DIALOG_TYPE_WARRING);        } finally {            if (cursor != null)                cursor.close();        }    }    //刷新数据    private void refresh() {        title.setText(name);        albumAdapter.changData(path);        albumAdapter.notifyDataSetChanged();    }}